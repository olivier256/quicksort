00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.03
Created On: 19/12/2021 21:23:48

00000000                             1          ORG     0
00000000                             2  START
00000000                             3  
00000000                             4  _main:
00000000  41F9 00000100              5          lea     array,a0
00000006  2C08                       6          move.l  a0,d6           ; d6 = t
00000008  7E00                       7          moveq   #0,d7           ; d7 = 0
0000000A  43F9 000001D8              8          lea     arrayEnd,a1
00000010  93C8                       9          suba.l  a0,a1
00000012  2A09                      10          move.l  a1,d5
00000014  E24D                      11          lsr.w   #1,d5
00000016  5345                      12          subq    #1,d5
00000018  2A45                      13          movea.l d5,a5           ; a5 = n - 1
0000001A                            14  
0000001A  6100 0004                 15          bsr     quickSort
0000001E                            16  INF_LOOP:
0000001E  60FE                      17          BRA     INF_LOOP
00000020                            18  
00000020                            19  
00000020                            20  
00000020                            21  
00000020                            22  
00000020                            23  
00000020                            24  
00000020                            25  
00000020                            26  ; void quickSort(int *t, int left, int right);
00000020                            27  quickSort:
00000020                            28  ; IN
00000020                            29  ; d6    *t
00000020                            30  ; d7    left
00000020                            31  ; a5    right
00000020  48E7 3F3C                 32          movem.l a2-a5/d2-d7,-(sp)
00000024  BE4D                      33          cmp.w a5,d7
00000026  6C6A                      34          bge.s   .L1
00000028  364D                      35          move.w a5,a3
0000002A  200B                      36          move.l a3,d0
0000002C  D080                      37          add.l d0,d0
0000002E  2846                      38          move.l d6,a4
00000030  D9C0                      39          add.l d0,a4
00000032                            40  .L9:
00000032  3414                      41          move.w (a4),d2
00000034  3A07                      42          move.w d7,d5
00000036  5345                      43          subq.w #1,d5
00000038  3247                      44          move.w d7,a1
0000003A  2009                      45          move.l a1,d0
0000003C  D080                      46          add.l d0,d0
0000003E  2240                      47          move.l d0,a1
00000040  D3C6                      48          add.l d6,a1
00000042  300D                      49          move.w a5,d0
00000044  220B                      50          move.l a3,d1
00000046                            51  .L3:
00000046  3805                      52          move.w d5,d4
00000048  5244                      53          addq.w #1,d4
0000004A  2449                      54          move.l a1,a2
0000004C  3619                      55          move.w (a1)+,d3
0000004E  B642                      56          cmp.w d2,d3
00000050  6D26                      57          blt.s   .L4
00000052  D281                      58          add.l d1,d1
00000054  2046                      59          move.l d6,a0
00000056  D1C1                      60          add.l d1,a0
00000058                            61  .L6:
00000058  4A40                      62          tst.w d0
0000005A  6F06                      63          ble.s   .L5
0000005C  5340                      64          subq.w #1,d0
0000005E  B460                      65          cmp.w -(a0),d2
00000060  6DF6                      66          blt .L6
00000062                            67  .L5:
00000062  B044                      68          cmp.w d4,d0
00000064  6F16                      69          ble.s   .L7
00000066  3200                      70          move.w d0,d1
00000068  48C1                      71          ext.l d1
0000006A  2A01                      72          move.l d1,d5
0000006C  DA85                      73          add.l d5,d5
0000006E  2045                      74          move.l d5,a0
00000070  D1C6                      75          add.l d6,a0
00000072  3350 FFFE                 76          move.w (a0),-2(a1)
00000076  3083                      77          move.w d3,(a0)
00000078                            78  .L4:
00000078  3A04                      79          move.w d4,d5
0000007A  60CA                      80          bra .L3
0000007C                            81  .L7:
0000007C  3494                      82          move.w (a4),(a2)
0000007E  3883                      83          move.w d3,(a4)
00000080  BE45                      84          cmp.w d5,d7
00000082  6C06                      85          bge.s .L8
00000084  CB8D                      86          exg     d5,a5           ; Backup d5
00000086  6198                      87          bsr     quickSort
00000088  CB8D                      88          exg     d5,a5           ; Restore d5
0000008A                            89  .L8:
0000008A  3E05                      90          move.w d5,d7
0000008C  5447                      91          addq.w #2,d7
0000008E  BE4D                      92          cmp.w a5,d7
00000090  6DA0                      93          blt .L9
00000092                            94  .L1:
00000092  4CDF 3CFC                 95          movem.l (sp)+,a2-a5/d2-d7
00000096  4E75                      96          rts
00000098                            97  
00000098                            98          ds.b    $100-*
00000100                            99  array:
00000100= 002D 0141 4451 0...      100          dc.w    45, 321,  17489, 145, 165, 112, 135, 65, 48, 16, 23, 48, 49, 98
0000011C= 002D 0141 1D41 0...      101          dc.w    45, 321, 7489, 45, 65, 12, 35, 135, 178, 198, 165 , 148, 116, 123, 148, 149, 198
0000013E= 0091 0529 4451 0...      102          dc.w    145, 1321, 17489, 145, 165,  135, 178, 198, 165 , 148, 116, 123, 148, 149, 198
0000015C= 0091 0529 4451 0...      103          dc.w    145, 1321, 17489, 145, 165, 112, 135, 65, 48, 16, 23, 48, 49, 98
00000178= 002D 0141 1D41 0...      104          dc.w    45, 321, 7489, 45, 65, 12, 35, 135, 178, 198, 165 ,  148, 116, 123, 148, 149, 198
0000019A                           105  
0000019A= 002D 0141 1D41 0...      106          dc.w    45, 321, 7489, 45, 65, 12, 35, 135, 178, 198, 165 , 148, 116, 123, 148, 149, 198
000001BC= 0091 0529 4451 0...      107          dc.w    145, 1321, 17489, 145, 165, 112, 135, 65, 48, 16, 23, 48, 49, 98
000001D8                           108  
000001D8                           109  
000001D8                           110  arrayEnd:
000001D8                           111  
000001D8                           112  
000001D8                           113          END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ARRAY               100
ARRAYEND            1D8
INF_LOOP            1E
QUICKSORT           20
QUICKSORT:L1        92
QUICKSORT:L3        46
QUICKSORT:L4        78
QUICKSORT:L5        62
QUICKSORT:L6        58
QUICKSORT:L7        7C
QUICKSORT:L8        8A
QUICKSORT:L9        32
START               0
_MAIN               0
